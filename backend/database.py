"""
–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è Vercel serverless environment
"""
import os
from motor.motor_asyncio import AsyncIOMotorClient
from dotenv import load_dotenv
import asyncio

# Load .env —Ñ–∞–π–ª
env_path = os.path.join(os.path.dirname(__file__), '.env')
try:
    load_dotenv(env_path, encoding='utf-8')
except:
    pass

# MongoDB connection
MONGODB_URL = os.getenv("MONGODB_URL", "mongodb://localhost:27017")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
_client = None
_db = None

async def get_client():
    """–ü–æ–ª—É—á–∏—Ç—å MongoDB –∫–ª–∏–µ–Ω—Ç (—Å–æ–∑–¥–∞–µ—Ç –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"""
    global _client
    if _client is None:
        try:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è serverless
            _client = AsyncIOMotorClient(
                MONGODB_URL,
                serverSelectionTimeoutMS=5000,  # 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
                connectTimeoutMS=5000,          # 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
                maxPoolSize=1,                  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—É–ª –¥–ª—è serverless
                retryWrites=True
            )
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            await _client.admin.command('ping')
            print(f"‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∞: {MONGODB_URL[:50]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB: {e}")
            _client = None
            raise
    return _client

async def get_database():
    """–ü–æ–ª—É—á–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö LearnApp"""
    global _db
    if _db is None:
        client = await get_client()
        _db = client.LearnApp
        print("üìÇ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö LearnApp –≥–æ—Ç–æ–≤–∞")
    return _db

# –°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é)
def get_sync_client():
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞"""
    try:
        return AsyncIOMotorClient(
            MONGODB_URL,
            serverSelectionTimeoutMS=5000,
            connectTimeoutMS=5000,
            maxPoolSize=1,
            retryWrites=True
        )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è MongoDB –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return None

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
client = get_sync_client()
db = client.LearnApp if client else None 