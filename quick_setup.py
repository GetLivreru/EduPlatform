#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Atlas - –±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è, —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
"""

def quick_atlas_setup():
    print("‚ö° –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MongoDB Atlas")
    print("=" * 40)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ—Ç .env —Ñ–∞–π–ª –¥–ª—è Atlas\n")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    atlas_url = input("üîó –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Atlas Connection String: ").strip()
    
    if not atlas_url:
        print("‚ùå Connection string –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    if "/LearnApp" not in atlas_url:
        if "?" in atlas_url:
            atlas_url = atlas_url.replace("?", "/LearnApp?")
        else:
            atlas_url = f"{atlas_url}/LearnApp"
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    env_content = f"""# MongoDB Atlas Configuration
MONGODB_URL={atlas_url}

# –°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è JWT —Ç–æ–∫–µ–Ω–æ–≤
SECRET_KEY=your_super_secret_key_here_change_this_in_production

# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000

# OpenAI API –∫–ª—é—á (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
OPENAI_API_KEY=your_openai_api_key_here
"""
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)
        
        print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: docker-compose -f docker-compose-atlas.yml up --build")
        print("2. –ò–ª–∏: python sync_users_atlas.py (–¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è .env: {e}")
        return False

if __name__ == "__main__":
    quick_atlas_setup() 